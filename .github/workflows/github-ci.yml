name: smep CI
on: [push]
jobs:
  pipeline:
    name: smep pipeline
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
    timeout-minutes: 40
    env:
      NODE_VERSION: 12.16.1
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: true
      NG_CLI_ANALYTICS: false
      be-working-directory: ./be
      fe-working-directory: ./fe
      ui-test-directory: ./ui-test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.16.1
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - name: Run backend test
        run: mvn install
        working-directory: ${{env.be-working-directory}}

      - name: Package be
        run: mvn package
        working-directory: ${{env.be-working-directory}}

#      - name: Install node.js packages
#        run: npm install
#        working-directory: ${{env.fe-working-directory}}

#      - name: Run frontend test
#        run: npm test
#        working-directory: ${{env.fe-working-directory}}

#      - name: start backend
#        run: |
#          ./mvnw -ntp &
#          echo $! > .pidRunApp
#        working-directory: ${{env.working-directory}}

#      - name: Cypress run
#        uses: cypress-io/github-action@v2
#        with:
#          record: true
#          wait-on: http://localhost:8080
#          # wait for x minutes for the server to respond
#          wait-on-timeout: 600
#          working-directory: ${{env.ui-test-directory}}
#        env:
#          # pass the Dashboard record key as an environment variable
#          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
#          # pass GitHub token to allow accurately detecting a build vs a re-run build
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        - name: Cache SonarCloud packages
          uses: actions/cache@v1
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Cache Maven packages
          uses: actions/cache@v1
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
        - name: Build and analyze
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          working-directory: ${{env.be-working-directory}}

#      - name: Build and publish docker image
#        if: github.event_name == 'push' && (github.ref == 'refs/heads/working' || startsWith(github.ref, 'refs/tags/'))
#        run: |
#          GIT_TAG=:${GITHUB_REF#refs/tags/}
#          DOCKER_TAG=${GIT_TAG#:refs/heads/working}
#          ./mvnw -ntp jib:build -Djib.to.image=registry.hub.docker.com/yuqiuge/sfo-gate-assignment-problem${DOCKER_TAG} -Djib.to.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKER_PASSWORD }}"
#        working-directory: ${{env.working-directory}}
